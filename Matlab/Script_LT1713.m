clear; clc; close all;
 
%% Zmienne globalne
 
global A J C R H_THR L_THR H_VOUT L_VOUT VcapFun;
% współczynniki korekcji 
A = [-2.7256*1E16 3.6379*1E7 1.0318 -1.510*1E-11];
J = -400E-12;          % prąd Ibias komparatorów
R = 8400;           % rezystancja pomiarowa
 
H_THR = 3.3500;       % próg napięcia referencyjnego (H)
L_THR = 1.6770;       % próg napięcia referencyjnego (L)
 
H_VOUT = 5.0230;      % napięcie stanu logicznego '1' na wyjściu bufora
L_VOUT = 0.0000;      % napięcie stanu logicznego '0' na wyjściu bufora
 
%% Rozwiązanie matematyczne układu
 
syms s t Jbias Cap Res Vout Vcstart Vcstop;
Flaplace(Cap, Res, s, Vout, Vcstart, Vcstop, Jbias) = ...
    (Cap * Vcstart + Vout / Res / s - Jbias / s) / (1 / Res + s * Cap);
VcapFun = ilaplace(Flaplace) == Vcstop;
 
%% Measurements Results
 
Freq = [
    551695.690; 
    551669.060; 
    551775.560; 
    551731.190; 
    551775.560; 
    551784.440; 
    551855.500; 
    551873.250; 
    551837.750; 
    551864.380; 
    551873.250; 
    551846.560; 
    551828.880; 
    551748.940; 
    551740.060; 
    551899.880; 
    551864.380; 
    551855.500; 
    551864.380; 
    551864.380; 
    551873.250; 
    551864.380; 
    551873.250; 
    551873.250; 
    551864.380; 
    551873.250; 
    551873.250; 
    551873.250; 
    551873.250; 
    551882.130; 
    551864.380; 
    551873.250; 
    551882.130; 
    551846.560; 
    551748.940; 
    551793.310; 
    551811.060; 
    551819.940; 
    551828.880; 
    551811.060; 
    551828.880; 
    551828.880; 
    551811.060; 
    551819.940; 
    551828.880; 
    551846.560; 
    551873.250; 
    551855.500; 
    551864.380; 
    551864.380; 
    551811.060; 
    551819.940; 
    551837.750; 
    551837.750; 
    551846.560; 
    551855.500; 
    551837.750; 
    551855.500; 
    551828.880; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551864.380; 
    551846.560; 
    551864.380; 
    551855.500; 
    551864.380; 
    551873.250; 
    551864.380; 
    551864.380; 
    551873.250; 
    551873.250; 
    551882.130; 
    551873.250; 
    551873.250; 
    551882.130; 
    551882.130; 
    551873.250; 
    551864.380; 
    551882.130; 
    551873.250; 
    551864.380; 
    551855.500; 
    551864.380; 
    551855.500; 
    551899.880; 
    551846.560; 
    551864.380; 
    551882.130; 
    551864.380; 
    551873.250; 
    551864.380; 
    551864.380; 
    551864.380; 
    551855.500; 
    551864.380; 
    551855.500; 
    551855.500; 
    551846.560; 
    551855.500; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551855.500; 
    551846.560; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551846.560; 
    551828.880; 
    551837.750; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551811.060; 
    551819.940; 
    551811.060; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551811.060; 
    551819.940; 
    551811.060; 
    551819.940; 
    551811.060; 
    551819.940; 
    551819.940; 
    551811.060; 
    551811.060; 
    551811.060; 
    551811.060; 
    551811.060; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551811.060; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551855.500; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551846.560; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551837.750; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551811.060; 
    551819.940; 
    551819.940; 
    551802.250; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551837.750; 
    551819.940; 
    551819.940; 
    551811.060; 
    551811.060; 
    551819.940; 
    551811.060; 
    551819.940; 
    551811.060; 
    551811.060; 
    551811.060; 
    551828.880; 
    551819.940; 
    551811.060; 
    551811.060; 
    551819.940; 
    551819.940; 
    551811.060; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551811.060; 
    551819.940; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551846.560; 
    551837.750; 
    551837.750; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551846.560; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551811.060; 
    551828.880; 
    551819.940; 
    551837.750; 
    551837.750; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551846.560; 
    551846.560; 
    551837.750; 
    551846.560; 
    551837.750; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551837.750; 
    551846.560; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551811.060; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551855.500; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551837.750; 
    551855.500; 
    551855.500; 
    551855.500; 
    551846.560; 
    551855.500; 
    551846.560; 
    551846.560; 
    551846.560; 
    551855.500; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551846.560; 
    551828.880; 
    551837.750; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551837.750; 
    551855.500; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551846.560; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551855.500; 
    551855.500; 
    551855.500; 
    551855.500; 
    551846.560; 
    551855.500; 
    551855.500; 
    551855.500; 
    551846.560; 
    551846.560; 
    551837.750; 
    551855.500; 
    551855.500; 
    551846.560; 
    551864.380; 
    551855.500; 
    551864.380; 
    551864.380; 
    551855.500; 
    551855.500; 
    551855.500; 
    551864.380; 
    551855.500; 
    551828.880; 
    551855.500; 
    551855.500; 
    551864.380; 
    551846.560; 
    551864.380; 
    551855.500; 
    551855.500; 
    551855.500; 
    551846.560; 
    551864.380; 
    551819.940; 
    551837.750; 
    551846.560; 
    551837.750; 
    551846.560; 
    551846.560; 
    551837.750; 
    551846.560; 
    551846.560; 
    551873.250; 
    551855.500; 
    551873.250; 
    551873.250; 
    551873.250; 
    551855.500; 
    551864.380; 
    551855.500; 
    551873.250; 
    551855.500; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551846.560; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551837.750; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551819.940; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551819.940; 
    551811.060; 
    551811.060; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551828.880; 
    551819.940; 
    551811.060; 
    551811.060; 
    551811.060; 
    551819.940; 
    551811.060; 
    551811.060; 
    551811.060; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551837.750; 
    551846.560; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551811.060; 
    551811.060; 
    551802.250; 
    551811.060; 
    551828.880; 
    551837.750; 
    551828.880; 
    551837.750; 
    551846.560; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551846.560; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551811.060; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551846.560; 
    551855.500; 
    551855.500; 
    551855.500; 
    551846.560; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551855.500; 
    551855.500; 
    551846.560; 
    551846.560; 
    551846.560; 
    551855.500; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551819.940; 
    551757.810; 
    551864.380; 
    551837.750; 
    551837.750; 
    551819.940; 
    551864.380; 
    551855.500; 
    551837.750; 
    551828.880; 
    551828.880; 
    551846.560; 
    551828.880; 
    551775.560; 
    551766.690; 
    551793.310; 
    551837.750; 
    551846.560; 
    551855.500; 
    551855.500; 
    551855.500; 
    551855.500; 
    551864.380; 
    551855.500; 
    551855.500; 
    551855.500; 
    551846.560; 
    551855.500; 
    551846.560; 
    551846.560; 
    551864.380; 
    551855.500; 
    551855.500; 
    551864.380; 
    551855.500; 
    551855.500; 
    551846.560; 
    551837.750; 
    551855.500; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551846.560; 
    551855.500; 
    551855.500; 
    551837.750; 
    551855.500; 
    551855.500; 
    551846.560; 
    551864.380; 
    551855.500; 
    551855.500; 
    551864.380; 
    551864.380; 
    551855.500; 
    551855.500; 
    551864.380; 
    551846.560; 
    551846.560; 
    551846.560; 
    551828.880; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551846.560; 
    551837.750; 
    551846.560; 
    551855.500; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551828.880; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551828.880; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551837.750; 
    551846.560; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551837.750; 
    551828.880; 
    551828.880; 
    551837.750; 
    551837.750; 
    551837.750; 
    551846.560; 
    551828.880; 
    551837.750; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551837.750; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551811.060; 
    551828.880; 
    551828.880; 
    551828.880; 
    551828.880; 
    551819.940; 
    551819.940; 
    551828.880; 
    551819.940; 
    551828.880; 
    551819.940; 
    551819.940; 
    551819.940; 
    551828.880; 
    551811.060; 
    551828.880; 
    551811.060; 
    551819.940; 
    551819.940; 
    551802.250; 
    551811.060; 
    551811.060; 
    551811.060; 
    551811.060; 
    551811.060; 
    551802.250; 
    551802.250; 
    551802.250; 
    551802.250; 
    551811.060; 
];
 
Temperature = [
    28.8, 28.8, 28.7, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.8, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.8, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.6, 28.7, 28.7, 28.6, 28.6, 28.6, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.6, 28.6, 28.6, 28.7, 28.6, 28.6, 28.6, 28.7, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.6, 28.5, 28.6, 28.5, 28.5, 28.6, 28.6, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 28.6, 28.5, 28.6, 28.5, 28.5, 28.6, 28.6, 28.5, 28.6, 28.5, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.7, 28.6, 28.6, 28.7, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.8, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.6, 28.6, 28.7, 28.6, 28.7, 28.7, 28.7, 28.6, 28.6, 28.6, 28.7, 28.7, 28.6, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.6, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.6, 28.7, 28.6, 28.7, 28.6, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.7, 28.6, 28.7, 28.6, 28.6, 28.6, 28.7, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.6, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.6, 28.7, 28.6, 28.7, 28.7, 28.6, 28.6, 28.7, 28.7, 28.6, 28.6, 28.6, 28.6, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.6, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.7, 28.8, 28.8, 28.7, 28.7;
]';
 
Humidity = [
    49.7, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.7, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.1, 50.0, 50.0, 50.1, 50.1, 50.0, 50.0, 50.1, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.1, 50.1, 50.1, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.9, 49.9, 49.8, 49.8, 49.9, 49.8, 49.9, 49.9, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 50.0, 50.0, 50.1, 50.0, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.0, 50.1, 50.0, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.9, 50.0, 50.0, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.8, 49.8, 49.9, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.9, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.6, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.7, 49.7, 49.7, 49.6, 49.6, 49.7, 49.6, 49.6, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.7, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.6, 49.7, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.7, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.7, 49.8, 49.8, 49.8, 49.8, 49.7, 49.8, 49.8, 49.7, 49.7, 49.8, 49.7, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.6, 49.6, 49.6, 49.7, 49.7, 49.7, 49.7, 49.6, 49.6, 49.6, 49.7, 49.6, 49.6, 49.6, 49.6, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.7, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.7, 49.7, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.6, 49.6, 49.6, 49.6, 49.6, 49.6, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.8, 49.7, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.9, 49.8, 49.9, 49.9, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.8, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.9, 49.9, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 50.0, 50.1, 50.1, 50.2, 50.2, 50.2, 50.3, 50.3, 50.3, 50.3, 50.3, 50.3, 50.3, 50.3, 50.2, 50.2, 50.2, 50.2, 50.2, 50.2, 50.2, 50.2, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.0, 50.0, 50.0, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.1, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.9, 50.0, 50.0, 49.9, 50.0, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 50.0, 50.0, 50.0, 49.9, 49.9, 50.0, 50.0, 50.0, 50.0, 49.9, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.1, 50.1, 50.1, 50.0, 50.1, 50.1, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 49.9, 50.0, 49.9, 49.9, 49.9, 50.0, 49.9, 50.0, 50.0, 50.0, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.9, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.8, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7, 49.7;
]';
 
% wyniki pojedynczych pomiarów
Ceoff1 = R * log((H_THR-H_VOUT+J*R)/(L_THR-H_VOUT+J*R));
Ceoff2 = R * log((L_THR-L_VOUT+J*R)/(H_THR-L_VOUT+J*R));

Capacity = [ 
     -1 / (Ceoff1 + Ceoff2) ./ Freq
]; %* 1E12;
Correction(Capacity)
 
% średnia wartość pojemności
CapacityWithoutCorrection = mean(Capacity);
% pojemność właściwa - po korekcji
C = Correction(CapacityWithoutCorrection); 
 
%% Twój Kod
 
 
 
%% Wyznaczenie charakterystyk
PrintResults(Capacity);
%MeasurementTimePlt();
if size(Humidity, 1) > 1
    HumidityPlt(Capacity, Humidity, Temperature);
    GenerateHistogram(Capacity);
    %GenerateRandomErrorPlot(ChargingProbes, DischargingProbes);
end
%GenerateSignals(2);


%% Definicje funkcji
% Funkcja wyznaczająca wartość pojemności
function C = CapacityFromCharging(Time)
    global H_THR L_THR H_VOUT J R VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Cfun = isolate(VcapFun, Cap);
    C = eval(rhs(subs(Cfun, {Res, t, Vout, Vcstart, Vcstop, Jbias}, ...
        {R, Time, H_VOUT, L_THR, H_THR, J})));
end
function C = CapacityFromDischarging(Time)
    global H_THR L_THR L_VOUT J R VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Cfun = isolate(VcapFun, Cap);
    C = eval(rhs(subs(Cfun, {Res, t, Vout, Vcstart, Vcstop, Jbias}, ...
        {R, Time, L_VOUT, H_THR, L_THR, J})));
end
 
% Funkcja wyznaczająca czas ładowania pojemności
function Time = ChargingTime(Resistance, Capacity)
    global H_THR L_THR H_VOUT J VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Tfun = isolate(VcapFun, t);
    Time = eval(rhs(subs(Tfun, {Res, Cap, Vout, Vcstart, Vcstop, Jbias}, ...
        {Resistance, Capacity, H_VOUT, L_THR, H_THR, J})));
end
 
% Funkcja wyznaczająca czas rozładowania pojemności
function Time = DischargingTime(Resistance, Capacity)
    global H_THR L_THR L_VOUT J VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Tfun = isolate(VcapFun, t);
    Time = eval(rhs(subs(Tfun, {Res, Cap, Vout, Vcstart, Vcstop, Jbias}, ...
        {Resistance, Capacity, L_VOUT, H_THR, L_THR, J})));
end
 
% Wyznaczenie maksymalnego zakresu badanych pojemności
function[C_min, C_max] = CapacityRange(Ticks_min, Ticks_max)
    C_min = max([CapacityFromCharging(Ticks_min / 16E6)...
        CapacityFromDischarging(Ticks_min / 16E6)]) ;
    C_max = min([CapacityFromCharging(Ticks_max / 16E6)...
        CapacityFromDischarging(Ticks_max / 16E6)]);
end
 
% Funkcja implementująca Oversampling
function Time = Oversampling(TicksIn)
    temp = 16 - ceil(log2(max(TicksIn)));
    bits = 3;
    if temp < 4
        bits = temp;
    end
    N = power(4, bits);
    sum = 0;
    for i = (size(TicksIn, 2) - N + 1):1:(size(TicksIn, 2))
        sum = sum + TicksIn(i);
    end
    result = bitshift(sum, -bits);
    Time = result * power(2, -bits) / 16E6;
end
 
% Korekcja wartości pojemności
function Cout = Correction(Cin)
    global A;
    C = Cin;
    %if Cin > 1
    %    C = Cin * 1E-12;
    %end
    Cout = polyval(A, C) * 1E12;
end
 
% Wyznaczenie temperatury punktu rosy
function DP = DewPoint(T, RH)
    DP = power(RH / 100.0, 0.125) * (112 + 0.9 * T) + 0.1 * T - 112;
end

% Wyświetl komunikaty
function PrintResults(Capacity)
    global C A;
    CapacityWithoutCorrection = mean(Capacity);
    fprintf('    Measured Capacity: %3.4f pF\n\n', CapacityWithoutCorrection);
    fprintf('    Capacity With Correction: %3.4f pF\n\n', C);
    fprintf('Correction Poly: [%1.4e %1.4e %1.4e %1.4e]\n', A);
end

% Wyznaczenie charakterystyki czasu pomiaru
function MeasurementTimePlt()
    global R C;
    figure('Name', 'Time of measurements');
    Caxis = (100:20:300);
    Taxis = [
        ChargingTime(R, Caxis * 1E-12);
        DischargingTime(R, Caxis * 1E-12)
    ] * 1E6;
    subplot(2, 1, 1);
    plot(Caxis, Taxis(1,:), Caxis, Taxis(2,:));
    title("Measurement time depends on Capacity[R = "+R * 1E-3+" kOhm]");
    legend('ChargingTime', 'DischargingTime');
    xlabel('Capacity [pF]'); ylabel('Time [us]');

    Raxis = 10E3:10E3:1E6;
    Taxis = [
        ChargingTime(Raxis, C * 1E-12);
        DischargingTime(Raxis, C * 1E-12)
    ] *1E6;
    subplot(2, 1, 2);
    plot(Raxis * 1E-3, Taxis(1,:), Raxis * 1E-3, Taxis(2,:));
    title("Measurement time depends on Resistance  [C = " + C + " pF]");
    legend('ChargingTime', 'DischargingTime');
    xlabel('Resistance [kOhm]'); ylabel('Time [us]');
end

% Wyznaczenie charakterystyki wilgotności(czujnik HS1101)
function HumidityPlt(Capacity, Humidity, Temp)
    HS1101_min = 161; HS1101_max = 193;
    DP = [];
    for i = 1:1:size(Humidity, 1)
        DP = [DP DewPoint(Temp(i), Humidity(i))];
    end
    X = Correction(Capacity) ./ 180;
    RH = -3465.5 .* X.^3 + 10732 .* X.^2 - 10457 .* X + 3255.9; 
    for i = 1:1:size(RH, 2)
        if RH(i) > 100
            RH(i) = 100;
        elseif RH(i) < 0
            RH(i) = 0;
        end
    end
    figure('Name', 'Humidity');
    subplot(2, 1, 1);
    N = 1:1:size(Humidity, 1);
    plot(N, RH, N, Humidity);
    title('Humidity');
    xlabel('N'); ylabel('RH [%]');
    legend('HS1101', 'SHTC3');
    xlim([1 N(end)]);
    subplot(2, 1, 2);
    plot(N, Temp, N, DP);
    title('Temperature');
    xlabel('N'); ylabel('Temperature [°C]');
    legend('Temperature', 'DewPoint');
    xlim([1 N(end)]);
end

% Funkcja wyznaczająca przebiegi czasowe:
function GenerateSignals(n_periods)
    global H_VOUT L_VOUT J C R H_THR L_THR;
    syms s t Cap Res Vout Vcstart Jbias;
    Vlaplace(Vout, Jbias, Cap, Res, Vcstart, s) = ...
    (Cap * Vcstart + Vout / Res / s - Jbias / s) / (1 / Res + s * Cap);
    Vcap_t = matlabFunction(ilaplace(Vlaplace));
    VCAP = []; S_THR = []; SIGNAL = [];
    TIME = 0; tc = []; td = [];
    V = 0; state = 0;
    step = 1E-9;
    for t = 0:step:1000E-6
        if state == 0
            % charging
            V = Vcap_t(H_VOUT, J, C * 1E-12, R, L_THR, t - TIME);
            VCAP(end + 1) = V;
            SIGNAL(end + 1) = H_VOUT;
            S_THR(end + 1) = L_VOUT;
            if V > H_THR
                tc(end + 1) = t - TIME;
                TIME = t;
                state = 1;
                S_THR(end) = H_VOUT;
            end
        else
            % discharging
            V = Vcap_t(L_VOUT, J, C * 1E-12, R, H_THR, t - TIME);
            VCAP(end + 1) = V;
            SIGNAL(end + 1) = L_VOUT;
            S_THR(end + 1) = L_VOUT;
            if V < L_THR
                td(end + 1) = t - TIME;
                TIME = t;
                state = 0;
                S_THR(end) = H_VOUT;
                if TIME >= n_periods * (tc(1) + td(1))
                    break;
                end
            end
        end
    end
    time = 0:step: (n_periods * (tc(1) + td(1)));

    % Przebieg napięcia na pojemności
    figure('Name', 'Measurement System Signals');
    subplot(3, 1, 1);
    plot(time * 1E6, VCAP(1, 1:size(time, 2)));
    xlabel("Time [us]"); ylabel("Capacitor Voltage[V]");
    title("Capacitor Voltage Plot");
    axis([0 time(end) * 1E6 L_THR H_THR]);


    % Przebieg przekroczenia progów napięcia:
    subplot(3, 1, 2);
    plot(time * 1E6, S_THR(1, 1:size(time, 2)));
    xlabel("Time [us]"); ylabel("Voltage [V]");
    title("Signal of exceeding the voltage threshold [S-THR]");
    axis([0 time(end) * 1E6 0 6]);

    % przebieg sygnału z MK:
    subplot(3, 1, 3);
    plot(time * 1E6, SIGNAL(1, 1:size(time, 2)));
    xlabel("Time [us]");
    ylabel("Voltage [V]");
    title("Microcontroller Signal");
    axis([0 time(end) * 1E6 0 6]);
end

function GenerateHistogram(Capacity)
    hist = [];
    CapCorr = [];
    for i = 1:1:size(Capacity, 1)
        CapCorr = [CapCorr Correction(Capacity(i))];
    end
    figure('Name', 'Histogram');
    histogram(CapCorr);
    xlabel('pojemność C [pF]');
    ylabel('liczba wystąpień');
end
function GenerateRandomErrorPlot(ChargingProbes, DischargingProbes)
    CP = []; DP = [];
    for i = 1:1:size(ChargingProbes, 1)
        CP = [CP mean(ChargingProbes(i, :))];
        DP = [DP mean(DischargingProbes(i, :))];
    end
    N = 1:1:size(ChargingProbes, 1);
    figure('Name', 'Charging')
    subplot(2, 1, 1)
    plot(N, (max(CP)-CP));
    xlabel('numer pomiaru');
    ylabel('błąd losowy [cykle zegara]');
    subplot(2, 1, 2)
    plot(N, (max(CP)-CP)/max(CP)*100);
    xlabel('numer pomiaru');
    ylabel('random error [%]');
    figure('Name', 'Discharging')
    subplot(2, 1, 1)
    plot(N, (max(DP)-DP));
    xlabel('numer pomiaru');
    ylabel('random error [ticks]');
    subplot(2, 1, 2)
    plot(N, (max(DP)-DP)/max(DP)*100);
    xlabel('numer pomiaru');
    ylabel('random error [%]');
end

